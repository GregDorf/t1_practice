server:
  port: 8080
spring:
  application:
    name: "t1-practice"
  datasource:
    url: jdbc:postgresql://localhost:5432/t1_practice
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        bytecode:
          provider:
            format_sql: true
  flyway:
    enabled: false
    locations: classpath:db/migration
    baseline-on-migrate: true
  sql:
    init:
      mode: always
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: t1-metrics-group

metric:
  time-limit-ms: 500

cache:
  ttl: 60000

jwt:
  secret: dbahwdbhf@HEBfbJKEfbEHB#Rfnsejfn3Hr#3

transaction:
  reject-threshold: 3

bannedmonitor:
  url: http://localhost:8083

scheduler:
  unblock-clients:
    enabled: true
    cron: "0 */1 * * * ?"
    batch-size: 10
  release-account-arrest:
    enabled: true
    cron: "0 */2 * * * ?"
    batch-size: 5

management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,prometheus"
  endpoint:
    health:
      show-details: always
    metrics:
      access: read_only
    prometheus:
      access: read_only
  metrics:
    tags:
      application: ${spring.application.name}